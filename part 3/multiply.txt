#ver. 1
                lw      0       2       mcand    # $2 = mcand
                lw      0       3       mplier   # $3 = mplier
                lw      0       6       one     # $6 = 1
multipl         beq     4       3       done     # if $4 == mplier ,hait
                add     1       2       1        # result = result + mcand
                add     4       6       4        # $4 =$4+1
                beq     0       0       multipl  # jump to multipl loop
                done     halt
mcand .fill 20
mplier .fill 75
one .fill 1

#ver. 2
        lw      0       1       mcand       # $1 = mcand (32)
        lw      0       2       mplier      # $2 = mplier (10)
        lw      0       3       zero        # $3 = 0, this will hold the result
multi   beq     2       0       done        # If $2 (mplier) == 0, go to done (finished)
        lw      0       4       one         # Load 1 into $4 for checking LSB
        nand    2       4       6           # $6 = $2 NAND $4 (check if LSB of $2 is 1)
        nand    6       6       6           # Double NAND to get AND result
        beq     6       0       step       # If LSB is 0, skip the addition step
        add     1       3       3           # Add $1 (mcand) to $3 (result), store in $3
step   add     1       1       1           # Shift mcand left (multiply by 2)
        add     2       2       2           # Shift mplier right (divide by 2)
        beq     0       0       multi       # Repeat the loop
done    halt                                # Halt the program

mcand   .fill   32                          # Multiplicand (32)
mplier  .fill   10                          # Multiplier (10)
pos1    .fill   1                           # Used for comparison
zero    .fill   0                           # Constant 0
one     .fill   1                           # Constant 1                     


